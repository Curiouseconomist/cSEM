% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/postestimate_test_MGD.R
\name{testMGD}
\alias{testMGD}
\alias{testMGD.cSEMResults_default}
\alias{testMGD.cSEMResults_multi}
\alias{testMGD.cSEMResults_2ndorder}
\title{Tests for multiple groups.}
\usage{
testMGD(
 .object                = args_default()$.object,
 .alpha                 = args_default()$.alpha,
 .approach_alpha_adjust = args_default()$.approach_alpha_adjust,
 .approach_mgd          = args_default()$.approach_mgd,
 .comparison            = args_default()$.comparison,
 .handle_inadmissibles  = args_default()$.handle_inadmissibles,
 .R                     = args_default()$.R,
 .saturated             = args_default()$.saturated,
 .seed                  = args_default()$.seed,
 .type_vcv              = args_default()$.type_vcv,
 .verbose               = args_default()$.verbose
 )

\method{testMGD}{cSEMResults_default}(.object = args_default()$.object,
  .alpha = args_default()$.alpha,
  .approach_alpha_adjust = args_default()$.approach_alpha_adjust,
  .approach_mgd = args_default()$.approach_mgd,
  .comparison = args_default()$.comparison,
  .handle_inadmissibles = args_default()$.handle_inadmissibles,
  .R = args_default()$.R, .saturated = args_default()$.saturated,
  .seed = args_default()$.seed, .type_vcv = args_default()$.type_vcv,
  .verbose = args_default()$.verbose)

\method{testMGD}{cSEMResults_multi}(.object = args_default()$.object,
  .alpha = args_default()$.alpha,
  .approach_alpha_adjust = args_default()$.approach_alpha_adjust,
  .approach_mgd = args_default()$.approach_mgd,
  .comparison = args_default()$.comparison,
  .handle_inadmissibles = args_default()$.handle_inadmissibles,
  .R = args_default()$.R, .saturated = args_default()$.saturated,
  .seed = args_default()$.seed, .type_vcv = args_default()$.type_vcv,
  .verbose = args_default()$.verbose)

\method{testMGD}{cSEMResults_2ndorder}(.object = args_default()$.object,
  .alpha = args_default()$.alpha,
  .approach_alpha_adjust = args_default()$.approach_alpha_adjust,
  .approach_mgd = args_default()$.approach_mgd,
  .comparison = args_default()$.comparison,
  .handle_inadmissibles = args_default()$.handle_inadmissibles,
  .R = args_default()$.R, .saturated = args_default()$.saturated,
  .seed = args_default()$.seed, .type_vcv = args_default()$.type_vcv,
  .verbose = args_default()$.verbose)
}
\arguments{
\item{.object}{An R object of class \link{cSEMResults} resulting from a call to \code{\link[=csem]{csem()}}.}

\item{.alpha}{An integer or a numeric vector of significance levels.
Defaults to \code{0.05}.}

\item{.approach_alpha_adjust}{Character string. Approach used to adjust the significance level.
One of: "\emph{none}", "\emph{bonferroni}",}

\item{.approach_mgd}{Character string. Approach used for the multi-group comparison.
One of "\emph{Klesel}", "\emph{Chin}", or "\emph{Sarstedt}".}

\item{.comparison}{A model in \link[lavaan:model.syntax]{lavaan model syntax} indicating which
parameters are compared.}

\item{.handle_inadmissibles}{Character string. How should inadmissible results
be treated? One of "\emph{drop}", "\emph{ignore}", or "\emph{replace}". If "\emph{drop}", all
replications/resamples yielding an inadmissible result will be dropped
(i.e. the number of results returned will be less than .R). For "\emph{ignore}"
all results are returned even if they are inadmissible (i.e.
number of results returned = .R). For "\emph{replace}" resampling continues until
there are exactly .R admissible solutions.
Defaults to "\emph{drop}".}

\item{.R}{Integer. The number of bootstrap replications. Defaults to \code{499}.}

\item{.saturated}{Logical. Should a saturated structural model be used?
Defaults to \code{FALSE}.}

\item{.seed}{Integer or NULL. The random seed to use. Defaults to \code{NULL} in which
case an arbitrary seed is choosen.}

\item{.type_vcv}{Character string. Indicates which model-implied correlation matrix is calcuted
One of "\emph{indicator}" or "\emph{construct}". Defaults to "\emph{indicator}".}

\item{.verbose}{Logical. Should information be printed to the console? Defaults
to \code{TRUE}.}
}
\value{
A standardized list of class \code{cSEMTest}. Technically \code{cSEMTest} is a named
list containing the following list elements:
\describe{
\item{\code{$Test_statistic}}{The value of test statistic(s).}
\item{\code{$Critical_value}}{The critical value(s).}
\item{\code{$Decision}}{The test decision. One of: \strong{Reject} or \strong{Do not reject}}
\item{\code{$Number_admissibles}}{The number of admissible runs. See \code{\link[=verify]{verify()}} for
what constitues and inadmissible run.}
}
}
\description{
The geodesic distance (dG) and the Euclidean distance (dE) is used
to assess group differences. Permutation is used to generate a
reference distribtuion.
}
\section{Methods (by class)}{
\itemize{
\item \code{cSEMResults_default}: (TODO)

\item \code{cSEMResults_multi}: (TODO)

\item \code{cSEMResults_2ndorder}: (TODO)
}}

\examples{
\dontrun{
require(cSEM)
data(satisfaction)

model <- "
# Structural model
QUAL ~ EXPE
EXPE ~ IMAG
SAT  ~ IMAG + EXPE + QUAL + VAL
LOY  ~ IMAG + SAT
VAL  ~ EXPE + QUAL

# Measurement model

EXPE <~ expe1 + expe2 + expe3 + expe4 + expe5
IMAG <~ imag1 + imag2 + imag3 + imag4 + imag5
LOY  =~ loy1  + loy2  + loy3  + loy4
QUAL =~ qual1 + qual2 + qual3 + qual4 + qual5
SAT  <~ sat1  + sat2  + sat3  + sat4
VAL  <~ val1  + val2  + val3  + val4
"

listData <- list(satisfaction[-3,], satisfaction[-5, ], satisfaction[-10, ])
out.cSEM <- csem(listData, model) 

testMGD(.object = out.cSEM, .R = 20, .type_vcv= 'construct')
}

}
\seealso{
\link{cSEMResults}
}
