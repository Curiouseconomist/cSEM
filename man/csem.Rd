% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/00_cca.R, R/00_csem.R
\name{csem}
\alias{csem}
\alias{cca}
\title{Composite-based SEM and CCA}
\usage{
cca(
  .data             = NULL,
  .model            = NULL,
  .id               = NULL,
  .approach_weights = c("PLS-PM", "SUMCORR", "MAXVAR", "SSQCORR", "MINVAR", "GENVAR", "GSCA", 
                        "fixed", "unit"),
  ...)

csem(
  .data                        = NULL,
  .model                       = NULL,
  .approach_nl                 = c("sequential", "replace"),
  .approach_paths              = c("OLS", "2SLS"),
  .approach_weights            = c("PLS-PM", "SUMCORR", "MAXVAR", "SSQCORR", "MINVAR", "GENVAR", 
                                   "GSCA", "PCA", "unit", "bartlett", "regression"),
  .disattenuate                = TRUE,
  .id                          = NULL,
  .iter_max                    = 100,
  .normality                   = TRUE,
  .reliabilities               = NULL,
  .tolerance                   = 1e-05,
  .resample_method           = c("none", "bootstrap", "jackknife"),
  .resample_method2            = c("none", "bootstrap", "jackknife"),
  .R                           = 499,
  .R2                          = 199,
  .handle_inadmissibles        = c("drop", "ignore", "replace"),
  .user_funs                   = NULL,
  .eval_plan                   = c("sequential", "multiprocess"),
  .seed                        = NULL,
  ...
  )
}
\arguments{
\item{.data}{A \code{data.frame} or a \code{matrix} of standardized or unstandarized data. Additionally,
a list of \code{data.frame}(s) or \code{matrice}(s) is accepted in which case estimation
is repeated for each data set. Possible column types or classes
of the data provided are: logical, numeric (double or integer), factor (ordered and unordered)
or a mix of several types. The data may also include
\emph{one} character column whose column name must be given to \code{.id}.
This column is assumed to contain group identifiers used to split
the data into groups.}

\item{.model}{A model in \code{\link[lavaan:model.syntax]{lavaan model syntax}}
or a \link{cSEMModel}-list.}

\item{.id}{Character string or integer. The name or position of the column of
\code{.data} used to split the data into groups.
Defaults to \code{NULL}.}

\item{.approach_weights}{Character string. Approach used to
obtain composite weights. One of: "\emph{PLS-PM}", "\emph{SUMCORR}", "\emph{MAXVAR}",
"\emph{SSQCORR}", "\emph{MINVAR}", "\emph{GENVAR}", "\emph{GSCA}", "\emph{PCA}", "\emph{unit}", "\emph{bartlett}",
or "\emph{regression}".
Defaults to "\emph{PLS-PM}".}

\item{...}{Further arguments to be passed down to lower level functions of \code{csem()}
or \code{cca()}. Type \code{\link[cSEM:args_default]{args_default(.only_dots = TRUE)}}
or \code{\link[cSEM:args_default]{args_default(.only_dots = TRUE, .which_fun = "cca")}}
for a complete list of accepted \code{...} arguments for the respective function.}

\item{.approach_2ndorder}{Character string. Approach used for models containing
second order constructs. One of: "\emph{3stage}" or "\emph{repeated_indicators}".
Defaults to "\emph{3stage}".}

\item{.approach_nl}{Character string. Approach used to estimate nonlinear
structural relationships. One of: "\emph{sequential}" or "\emph{replace}".
Defaults to "\emph{sequential}".}

\item{.approach_paths}{Character string. Approach used to estimate the
structural coefficients. One of: "\emph{OLS}" or "\emph{2SLS}" (not yet implemented).
Defaults to "\emph{OLS}".}

\item{.disattenuate}{Logical. If possible, should composite/proxy correlations
be disattenuated if the construct is modeled as a common factor?
Defaults to \code{TRUE}.}

\item{.iter_max}{Integer. The maximum number of iterations allowed.
If \code{iter_max = 1} and \code{.approach_weights = "PLS-PM"} one-step weights are returned.
If the algorithm exceeds the specified number, weights of iteration step
\code{.iter_max - 1}  will be returned with a warning. Defaults to \code{100}.}

\item{.normality}{Logical. Should joint normality be assumed in the nonlinear model?
Defaults to \code{TRUE}. Ignored if the model is linear.}

\item{.reliabilities}{A character vector of \code{"name" = value} pairs,
where \code{value} is a number between 0 and 1 and \code{"name"} a character string
of the corresponding construct name, or \code{NULL}. Reliabilities
may be given for a subset of the constructs. Defaults to \code{NULL} in which case
reliabilities are estimated by \code{csem()}. Currently, only supported for
\code{.approach_weights = "PLS-PM"}.}

\item{.tolerance}{Double. The tolerance criterion for convergence.
Defaults to \code{1e-05}.}

\item{.resample_method}{Character string. The resampling method to use. One of:
"\emph{bootstrap}" or "\emph{jackknife}". Defaults to "\emph{bootstrap}".}

\item{.resample_method2}{Character string. The resampling method to use when resampling
from a resample. One of: "\emph{none}", "\emph{bootstrap}" or "\emph{jackknife}". For
"\emph{bootstrap}" the number of draws is provided via \code{.R2}. Currently,
resampling from each resample is only required for the studentized confidence
intervall computed by the \code{\link[=infer]{infer()}} function. Defaults to "\emph{none}".}

\item{.R}{Integer. The number of bootstrap replications. Defaults to \code{499}.}

\item{.R2}{Integer. The number of bootstrap replications to use when
resampling from a resample. Defaults to \code{199}.}

\item{.handle_inadmissibles}{Character string. How should inadmissible results
be treated? One of "\emph{drop}", "\emph{ignore}", or "\emph{replace}". If "\emph{drop}", all
replications/resamples yielding an inadmissible result will be dropped (
the number of results returned will be less than .R). For "\emph{ignore}" all results are returned
even if they are inadmissible (number of results returned = .R). For "\emph{replace}"
resampling continues until there are exactly .R admissible solutions.
Defaults to "\emph{drop}".}

\item{.user_funs}{A function or a (named) list of functions to apply to every
resample. Takes \code{.object} as an input (e.g., \code{myFun <- function(.object) {...}}).
Output should preferably be a (named)
vector but matrices are also accepted. However, the output will be
vectorized (columnwise) in this case. See the examples section for details.}

\item{.eval_plan}{Character string. The evaluation plan to use. One of
"\emph{sequential}" or "\emph{multiprocess}". In the latter case
all available cores will be used. Defaults to "\emph{sequential}".}

\item{.seed}{Integer. The random seed to use. Defaults to \code{NULL} in which
case an arbitrary seed is choosen.}
}
\value{
An object of class \code{cSEMResults} with methods for all postestimation generics.
Depending on the type of model and data the object has a different structure.

\describe{
\item{Default}{This will be the structure for the vaste majority of applications.
If the data is a single \code{matrix} or \code{data.frame} with no id-column,
the result is a \code{list} with elements:
\describe{
\item{\code{$Estimates}}{A list containing a list of estimated quantities.}
\item{\code{$Information}}{A list containing a list of additional information.}
}
The resulting object has classes \code{cSEMResults} and \code{cSEMResults_default}.
}
\item{Multi}{If the data provided is a single \code{matrix} or \code{data.frame} containing
an id-column to split the data by \code{G} group levels
or if a list of \code{G} datasets is provided, the resulting object is a list of \code{G}
lists, where \code{G} is equal to the number of groups or the number of datasets
in the list of datasets provided. Each of the \code{G} list elements are itself
a \code{cSEMResults_default} object. Hence its structure is identical to
the structure described in \code{Default}.

The resulting object has classes \code{cSEMResults} and \code{cSEMResults_multi}.
}
\item{2ndorder}{
A special output is generated if the model to estimate contains hierachical constructs
\strong{and} the 2step (3step) approach is used to estimate the model. In this case
the resulting object is a list containing two elements \code{First_stage} and
\code{ Second_stage}.

Each list element is itself a \code{cSEMResults_default} object. Hence its structure is identical to
the structure described in \code{Default}.
}
}

If \code{.resample_method = "bootstrap"} or \code{.resample_method = "jackknife"}, resamples
are attached to each object. For objects of class \code{cSEMResults_default} the resamples are
attached to \code{.object$Estimates$Estimates_resamples}. For objects of class
\code{cSEMResults_multi} the same is done by group. All objects containing
these elements gain the \code{cSEMResults_resampled} class.
}
\description{
Estimate linear, nonlinear, hierachical or multigroup structural equation
models using a composite-based approach.
}
\details{
\code{csem()} estimates linear, nonlinear, hierachical or multigroup structural
equation models using a composite-based approach like PLS-PM, PLSc, GSCA, GSCAm, GCCA or
differnt types of factor score regression (FSR). \code{csem()} is designed for quick and flexible
use by providing the user with default options except for
the mandatory \code{.data} and \code{.model} argument.

\code{cca()} performs CCA. CCA and SEM differ in that the former allows all
constructs to co-vary freely, i.e. no structural model is assumed.
Hence, \code{cca()} is technically a simple convenience wrapper
around \code{csem(..., .estimate_structural = FALSE)}.

\subsection{Data and model:}{
The \code{.data} and \code{.model} arguments are required. Data must be
provided as either a \code{matrix} or a \code{data.frame} with column names matching
the indicator names used in the model description of the measurement model.
Alternatively, a list of matrices or \code{data.frame}s may be provided
in which case estimation is repeated for each data set.
The data provided via \code{.data} may contain \strong{one} character column whose column name
must be provided to \code{.id}. Values of this column are interpreted as group
identifiers and \code{csem()} or \code{cca()} will split the data by levels of that column and run
the estimation for each level separately.

To provide a model use the \code{\link[lavaan:model.syntax]{lavaan model syntax}}
with two notable extensions/changes. First: the "\code{<~}" operator in \code{cSEM} is
used to define a composite instead of a formative common factor. Second:
the "\code{.}" is used to indicate interactions between constructs as in e.g.,
\code{construct1.construct2}. Alternatively a standardized (possibly incomplete)
\link{cSEMModel}-list may be supplied.
}

\subsection{Weights and path coefficients:}{
By default weights are estimated using the partial least squares (path) algorithm (\code{"PLS-PM"}).
A broad range of alternative weightning algorithms may be supplied to \code{.appraoch_weights}.
Currently the following approaches are implemented
\enumerate{
\item{(Default) Partial least squares path modeling (\code{"PLS"}). The algorithm
can be customized. See \code{\link[=calculateWeightsPLS]{calculateWeightsPLS()}} for details.}
\item{Generalized structured component analysis (\code{"GSCA"})}
\item{Generalized canoncial correlation analysis (\emph{GCCA}), including
\code{"SUMCORR"}, \code{"MAXVAR"}, \code{"SSQCORR"}, \code{"MINVAR"}, \code{"GENVAR"}}
\item{Principal component analysis (\code{"PCA"})}
\item{Factor score regression using sum scores (\code{"unit"}),
regression (\code{"regression"}) or bartlett scores (\code{"bartlett"})}
}

Composite-indicator and composite-composite correlations are properly
disattenuated by default to yield consistent loadings, construct correlations,
and path coefficients if any of the constructs in the model are modeled as a
common factor.

For \emph{PLS-PM} disattenuation is done using \emph{PLSc} \insertCite{Dijkstra2015}{cSEM}.
For \emph{GSCA} disattenuation is done implicitly by using \emph{GSCAm}. Weights obtained
by GCCA, unit weights and fixed weights are disattenuated using a
Disattenuation my be suppressed by setting
\code{.disattenuate = FALSE}. Note, however, that quantities in this case are inconsistent
estimates for their construct level counterparts if any of the constructs in the structural model is
modeled as a common factor!
}

\subsection{Nonlinear models:}{
If the model is nonlinear \code{csem()} estimates a polynomial structural equation model
using a non-iterative method of moments approach described in
\insertCite{Dijkstra2014}{cSEM}. Non linear terms include interactions and
exponential terms. The latter is described in model syntax as an
"interaction with itself", e.g., \code{x_1^3 = x1.x1.x1}. Currently only exponential
terms up to a power of three (i.e. three-way interactions) are allowed.

The current version of the package allows two kinds of estimation:
estimation of the reduced form equation (\code{.approach_nl = "reduced"}) and
sequential estimation (\code{.approach_nl = "sequential"}). The latter does not
not allow for multivariate normality of all exogenous variables, i.e.,
the latent variables and the error terms.

Distributional assumptions are kept to a minimum (an i.i.d. sample from a
population with finite moments for the relevant order); for higher order models,
that go beyond interaction, we work in this version with the assumption that
as far as the relevant moments are concerned certain combinations of
measurement errors behave as if they were Gaussian.
For details see: \insertCite{Dijkstra2014;textual}{cSEM}.
}

\subsection{Inference:}{
Inference is done via resampling. See \link{resamplecSEMResults} for details.
}
}
\examples{

}
\references{
\insertAllCited{}
}
\seealso{
\link{args_default}, \link{cSEMArguments}, \link{cSEMResults}, \link{foreman}
}
